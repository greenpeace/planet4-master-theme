.topic-link-block {
  a, .topic-link-block_editor-container {
    width: 100%;
    border-radius: 4px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    overflow: hidden;
    background-color: var(--grey-900);
    max-width: 46rem;
    height: auto;
    padding: $sp-6 $sp-3;

    &:hover {
      text-decoration: none;
    }
  }

  .topic-link-content {
    color: white;
    font-family: var(--font-family-primary);
    font-size: var(--font-size-m--font-family-primary);
    line-height: var(--line-height-m--font-family-primary);
    font-weight: var(--font-weight-bold);
    position: relative;
    z-index: 1;
    width: 100%;
    display: flex;
    justify-content: space-between;

    p {
      margin: 0;
      width: 90%;
      @include clamp-text(2);

      &:after {
        content: "";
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: auto;
        margin: auto;
        pointer-events: none;
        height: 1rem;
        width: 1rem;
        display: inline-block;
        transition: transform 300ms linear;
        transform: rotate(0deg);
        mask-image: url("../../images/chevron.svg");
        mask-repeat: no-repeat;
        mask-size: contain;
        background-repeat: no-repeat;
        background-color: currentcolor;

        html[dir="rtl"] & {
          right: auto;
          left: 0;
          transform: rotate(180deg);
        }
      }
    }
  }

  .background-image {
    position: absolute;
    width: 100%;
    height: auto;
    top: 0;
    left: 0;
    z-index: 0;
    transform: scale(1);
    transition: transform 0.3s ease-in-out;

    img {
      width: 100%;
      height: auto;
      max-height: 12rem;
      object-fit: cover;
    }

    &::before {
      content: "";
      width: 100%;
      height: 100%;
      position: absolute;
      display: block;
      background-color: var(--grey-900);
      opacity: 0.5;
    }
  }

  &:hover {
    .background-image {
      transform: scale(1.1);
    }

    p:after {
      transform: translateX(10px);

      html[dir="rtl"] & {
        transform: translateX(-10px) rotate(180deg);
      }
    }
  }
}
