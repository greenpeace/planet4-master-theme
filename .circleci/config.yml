---
version: 2.1

job-references:
  docker_auth: &docker_auth
    username: $DOCKERHUB_USERNAME
    password: $DOCKERHUB_PASSWORD

  setup_environment: &setup_environment
    name: Setup environment variables
    command: |
      echo "export PATH=$HOME/.composer/vendor/bin:$PATH" >> $BASH_ENV
      source /home/circleci/.bashrc

  install_php_dependencies: &install_php_dependencies
    name: Install dependencies
    command: |
      composer install
      sudo apt-get update
      sudo apt-get install --no-install-recommends -y mariadb-client subversion

  install_node_dependencies: &install_node_dependencies
    name: Install dependencies
    command: |
      npm ci --unsafe-perm=true --legacy-peer-deps

  php_job: &php_job
    environment:
      - WP_TESTS_DIR: "/tmp/wordpress-tests-lib"
      - WP_CORE_DIR: "/tmp/wordpress/"
    steps:
      - checkout
      - run: *setup_environment
      - run: *install_php_dependencies
      - run:
          name: phpcs
          command: |
            mkdir -p /tmp/test-results/phpcs
            vendor/bin/phpcs --config-set installed_paths vendor/wp-coding-standards/wpcs,vendor/slevomat/coding-standard
            vendor/bin/phpcs -i
            vendor/bin/phpcs -d error_reporting="E_ALL&~E_DEPRECATED" \
              --report=junit --report-file=/tmp/test-results/phpcs/$CIRCLE_JOB.xml \
              src/ page-templates/ tests/ *.php
      - run:
          name: phpunit
          when: always
          command: |
            mkdir -p /tmp/test-results/phpunit
            rm -rf $WP_TESTS_DIR $WP_CORE_DIR
            base=$(curl -s https://raw.githubusercontent.com/greenpeace/planet4-base/main/composer.json)
            WP_VERSION=$(jq -r '.extra["wp-version"] // empty' \<<< "${base}")
            bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1 $WP_VERSION
            vendor/bin/phpunit --log-junit /tmp/test-results/phpunit/$CIRCLE_JOB.xml
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results

  p4_instance_conf: &p4_instance_conf
    docker:
      - image: greenpeaceinternational/p4-builder:latest
        auth:
          <<: *docker_auth
    working_directory: /home/circleci/
    environment:
      APP_HOSTNAME: www.planet4.test
      APP_HOSTPATH:
      APP_ENVIRONMENT: development
      CLOUDSQL_INSTANCE: p4-develop-k8s
      CONTAINER_PREFIX: planet4-base
      GOOGLE_PROJECT_ID: planet-4-151612
      HELM_NAMESPACE: develop
      TYPE: "Build"
      WP_DB_NAME: planet4-base_wordpress
      WP_TITLE: Greenpeace Base Development

jobs:
  php81-tests:
    <<: *php_job
    docker:
      - image: cimg/php:8.1
        auth:
          <<: *docker_auth
      - image: cimg/mysql:5.7
        auth:
          <<: *docker_auth

  php83-tests:
    <<: *php_job
    docker:
      - image: cimg/php:8.3
        auth:
          <<: *docker_auth
      - image: cimg/mysql:5.7
        auth:
          <<: *docker_auth

  frontend-tests:
    docker:
      - image: cimg/node:20.18.0
        auth:
          <<: *docker_auth
    steps:
      - checkout
      - run: *install_node_dependencies
      - run:
          name: Lint CSS
          command: npm run lint:css
      - run:
          name: Lint JS
          command: npm run lint:js

  commitlint:
    docker:
      - image: cimg/node:20.18.0
        auth:
          <<: *docker_auth
    steps:
      - checkout
      - run:
          name: Lint commit messages
          command: npx commitlint -V --from main --to ${CIRCLE_SHA1}

  a11y-tests:
    docker:
      - image: cimg/node:20.18.0-browsers
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run: *install_node_dependencies
      - run:
          name: Accessibility tests
          command: |
            home="https://www-dev.greenpeace.org/test-$(cat /tmp/workspace/test-instance)/"
            search="https://www-dev.greenpeace.org/test-$(cat /tmp/workspace/test-instance)/?s="
            cat .pa11yci | jq ' .urls = ["'"$home"'", "'"$search"'"]' > pa11y.json
            npx pa11y-ci -c pa11y.json -T 1000 --reporter=pa11y-ci-reporter-html
      - store_artifacts:
          path: /home/circleci/project/pa11y-ci-report

  request-instance:
    environment:
      GOOGLE_PROJECT_ID: planet-4-151612
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Check if this is for an open PR
          command: check-pr-exists.sh "$(cat /tmp/workspace/commit-message)"
      - run:
          name: Book instance
          command: |
            JIRA_USERNAME=planet4 book-test-instance.py \
            --pr-url $(cat /tmp/workspace/pr) \
            --results /tmp/workspace/booking.json >/tmp/workspace/test-instance
            echo "https://app.circleci.com/pipelines/github/greenpeace/planet4-test-$(cat /tmp/workspace/test-instance)/"
      - run: activate-gcloud-account.sh
      - run:
          name: Put zip in cloud storage
          command: |
            filename="planet4-master-theme.zip"
            echo "planet4-packages/planet4-master-theme/${CIRCLE_SHA1}.zip" > /tmp/workspace/zip-path
            gs_path="gs://$(cat /tmp/workspace/zip-path)"
            gcloud storage cp "/tmp/workspace/$filename" "$gs_path"
      - run:
          name: Commit to test instance repo
          command: trigger_test_instance.sh planet4-master-theme false
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - test-instance
            - booking.json
            - pr

  request-test-user:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Create test user
          command: /usr/local/bin/test-user.py --create --instance=test-$(cat /tmp/workspace/test-instance)

  e2e-tests:
    working_directory: /usr/app/
    docker:
      - image: mcr.microsoft.com/playwright:v1.49.1
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout:
          path: /usr/app/planet4-master-theme
      - run:
          name: Install dependencies
          command: |
            npm install @playwright/test@1.49.1 @wordpress/e2e-test-utils-playwright@1.16.0 dotenv
            npx playwright install --with-deps
      - run:
          name: End-to-end tests
          command: |
            cd /usr/app/planet4-master-theme
            export TICKET=$(head -c 11 /tmp/workspace/commit-message)
            export WP_BASE_URL="https://www-dev.greenpeace.org/test-$(cat /tmp/workspace/test-instance)/"
            export WP_TEST_USERNAME="p4_test_user"
            export WP_TEST_PASSWORD="${WP_TEST_USER}"
            npx playwright test
      - run:
          name: Delete test user
          when: always
          command: |
            instance_repo="planet4-test-$(cat /tmp/workspace/test-instance)"
            curl -vvv --request POST \
              --url https://circleci.com/api/v2/project/github/greenpeace/${instance_repo}/pipeline \
              --header "Circle-Token: ${CIRCLE_TOKEN}" \
              --header 'content-type: application/json' \
              --data '{"parameters":{"run_develop":false, "run_create_test_user":false, "run_delete_test_user":true}}'
      - run:
          name: Extract tests artifacts
          when: always
          command: |
            mkdir -p /usr/artifacts/playwright/results /usr/artifacts/playwright/report
            cp -r /usr/app/planet4-master-theme/e2e-results/* /usr/artifacts/playwright/results || true
            cp -r /usr/app/planet4-master-theme/e2e-report/* /usr/artifacts/playwright/report || true
            cp /usr/app/planet4-master-theme/results.xml /usr/artifacts/playwright/ || true
      - store_test_results:
          path: /usr/artifacts
      - store_artifacts:
          path: /usr/artifacts

  comment-pr:
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Check if there is a PR
          command: |
            if [ ! -f /tmp/workspace/pr ]; then
              circleci-agent step halt
            fi
      - run:
          name: Post comment to PR
          command: |
            post-comment-to-pr.py \
            --pr-url $(cat /tmp/workspace/pr) \
            --test-instance $(cat /tmp/workspace/test-instance)

  create-zip:
    resource_class: xlarge
    docker:
      - image: cimg/node:20.18.0
        auth:
          <<: *docker_auth
    steps:
      - checkout
      - run: git submodule init && git submodule update
      - run: mkdir -p /tmp/workspace/
      - run:
          name: Extract commit message
          command: git log --format=%B -n 1 $CIRCLE_SHA1 > /tmp/workspace/commit-message
      - run:
          name: Install npm dependencies
          command: PUPPETEER_SKIP_DOWNLOAD=true PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci --legacy-peer-deps
      - run:
          name: Build assets
          command: npm run build
      - run:
          name: Remove unnecessary files
          command: rm -rf .circleci .git .githooks assets/src bin
      - run:
          name: Inject version to composer
          command: |
            cat composer.json | jq --arg version ${CIRCLE_TAG} '. + {version: $version}' > tmp.json
            mv -f tmp.json composer.json
      - run:
          name: Create zip file
          command: zip -r /tmp/workspace/planet4-master-theme.zip . -x "node_modules/*"
      - run:
          name: Zip file size sanity check
          command: |
            ls -lh /tmp/workspace/planet4-master-theme.zip
            if [ $(wc -c </tmp/workspace/planet4-master-theme.zip) -ge 20000000 ]; then
              echo "Zip file size exceeds 20MB, probably something went wrong."
              exit 1
            fi
      - persist_to_workspace:
          root: .
          paths:
            - composer.json
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - planet4-master-theme.zip
            - commit-message

  publish-zip:
    docker:
      - image: cimg/node:20.18.0
        auth:
          <<: *docker_auth
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Get upload url for this tag
          command: |
            curl https://api.github.com/repos/greenpeace/planet4-master-theme/releases/tags/${CIRCLE_TAG} |
                jq -r .upload_url |
                sed 's/{.*}/?name=planet4-master-theme.zip/' > /tmp/workspace/upload_url
            cat /tmp/workspace/upload_url
      - run:
          name: Upload zip file
          command: |
            curl \
                --fail \
                -H "Authorization: token ${GITHUB_OAUTH_TOKEN}" \
                -H "Content-Type: application/zip" \
                --data-binary @/tmp/workspace/planet4-master-theme.zip \
                "$(cat /tmp/workspace/upload_url)" | jq

  reset-instance:
    environment:
      GOOGLE_PROJECT_ID: planet-4-151612
    docker:
      - image: greenpeaceinternational/circleci-base:latest
        auth:
          <<: *docker_auth
    steps:
      - run:
          name: Get merge commit test instance
          command: |
            instance=$(find-commit-test-instance.py)
            if [ "$instance" = "False" ] || [ -z "$instance" ]; then
                echo "No test instance found."
                circleci-agent step halt
            fi
            mkdir -p /tmp/workspace/
            echo "$instance" >/tmp/workspace/test-instance
      - run:
          name: Activate gcloud
          command: activate-gcloud-account.sh
      - run:
          name: Commit to test instance repo
          command: trigger_test_instance.sh planet4-master-theme true

workflow_definitions:
  on_pr: &on_pr
    context: org-global
    filters:
      branches:
        ignore: main
  on_main: &on_main
    context: org-global
    filters:
      branches:
        only: main
  on_tag: &on_tag
    context: org-global
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\p{Digit}+\.\p{Digit}+.*/

workflows:
  branch:
    jobs:
      - php81-tests:
          <<: *on_pr
      - php83-tests:
          <<: *on_pr
      - frontend-tests:
          <<: *on_pr
      - commitlint:
          <<: *on_pr
      - create-zip:
          context: org-global
          filters:
            branches:
              ignore: main
            tags:
              only: /^v\p{Digit}+\.\p{Digit}+.*/
      - request-instance:
          <<: *on_pr
          requires:
            - create-zip
      - instance-ready:
          <<: *on_pr
          type: approval
          requires:
            - request-instance
      - comment-pr:
          <<: *on_pr
          requires:
            - instance-ready
      - a11y-tests:
          <<: *on_pr
          requires:
            - instance-ready
      - request-test-user:
          <<: *on_pr
          requires:
            - instance-ready
      - test-user-ready:
          <<: *on_pr
          type: approval
          requires:
            - request-test-user
      - e2e-tests:
          <<: *on_pr
          requires:
            - test-user-ready
      - publish-zip:
          <<: *on_tag
          requires:
            - create-zip
      - reset-instance:
          <<: *on_main
